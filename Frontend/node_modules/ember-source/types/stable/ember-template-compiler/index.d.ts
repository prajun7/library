declare module 'ember-template-compiler' {
  import * as _GlimmerSyntax from '@glimmer/syntax';
  import VERSION from 'ember/version';
  export let _Ember: unknown;
  export { default as precompile } from 'ember-template-compiler/lib/system/precompile';
  export { default as compile } from 'ember-template-compiler/lib/system/compile';
  export {
    default as compileOptions,
    buildCompileOptions as _buildCompileOptions,
    transformsFor as _transformsFor,
  } from 'ember-template-compiler/lib/system/compile-options';
  export {
    RESOLUTION_MODE_TRANSFORMS,
    STRICT_MODE_TRANSFORMS,
  } from 'ember-template-compiler/lib/plugins/index';
  export { EmberPrecompileOptions } from 'ember-template-compiler/lib/types';
  export { preprocess as _preprocess, print as _print } from '@glimmer/syntax';
  export { precompile as _precompile } from '@glimmer/compiler';
  export { _GlimmerSyntax, VERSION };
  import 'ember-template-compiler/lib/system/bootstrap';
  import 'ember-template-compiler/lib/system/initializer';
}

declare global {
  interface NodeRequire {
    has(name: string): boolean;
  }
  function define(path: string, deps: string[], module: () => void): void;
}
